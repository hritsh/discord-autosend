# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\Hritish\Documents\python\discord-autosend\gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
from webdriver_manager.chrome import ChromeDriverManager
from time import sleep
from os import system, name as osname
from pickle import load
from login import store

flag = False
class Ui_MainWindow(object):
    def startblock(self):
        ui.email.setDisabled(True)
        ui.passwd.setDisabled(True)
        ui.link.setDisabled(True)
        ui.message.setDisabled(True)
        ui.number.setDisabled(True)
        ui.interval.setDisabled(True)
        self.main()

    def main(self):
        email = ui.email.text()
        passwd = ui.passwd.text()
        link = ui.link.text()
        message = ui.message.text()
        n = ui.number.value()
        driver = webdriver.Chrome(ChromeDriverManager().install())
        driver.get(link)
        ui.result.setText("Logging in...")
        driver.find_element_by_name('email').send_keys(email)
        driver.find_element_by_name('password').send_keys(passwd)
        driver.find_element_by_name('password').send_keys(Keys.RETURN)
        sleep(5)
        ui.result.setText("Logged in successfully")
        sleep(1)
        for i in range(n):
                actions = ActionChains(driver)
                actions.send_keys(message)
                actions.send_keys(Keys.ENTER)
                actions.perform()
                sleep(1)
                ui.result.setText("\nAll Messages Sent")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(620, 380)
        MainWindow.setStyleSheet("background-color: rgb(44, 47, 51);\n"
"color: rgb(255, 255, 255);\n"
"alternate-background-color: rgb(35, 39, 42);")
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.link_label = QtWidgets.QLabel(self.centralwidget)
        self.link_label.setGeometry(QtCore.QRect(38, 171, 231, 20))
        self.link_label.setObjectName("link_label")
        self.link = QtWidgets.QLineEdit(self.centralwidget)
        self.link.setGeometry(QtCore.QRect(280, 171, 301, 20))
        self.link.setObjectName("link")


        self.message_label = QtWidgets.QLabel(self.centralwidget)
        self.message_label.setGeometry(QtCore.QRect(38, 201, 221, 20))
        self.message_label.setObjectName("message_label")
        self.message = QtWidgets.QLineEdit(self.centralwidget)
        self.message.setGeometry(QtCore.QRect(280, 201, 301, 20))
        self.message.setObjectName("message")


        self.number_label = QtWidgets.QLabel(self.centralwidget)
        self.number_label.setGeometry(QtCore.QRect(40, 231, 351, 20))
        self.number_label.setObjectName("number_label")
        self.number = QtWidgets.QSpinBox(self.centralwidget)
        self.number.setGeometry(QtCore.QRect(400, 231, 181, 22))
        self.number.setAccelerated(True)
        self.number.setMinimum(1)
        self.number.setMaximum(999999999)
        self.number.setSingleStep(1)
        self.number.setObjectName("number")


        self.passwd_label = QtWidgets.QLabel(self.centralwidget)
        self.passwd_label.setGeometry(QtCore.QRect(40, 131, 231, 16))
        self.passwd_label.setObjectName("passwd_label")
        self.passwd = QtWidgets.QLineEdit(self.centralwidget)
        self.passwd.setGeometry(QtCore.QRect(282, 131, 201, 20))
        self.passwd.setObjectName("passwd")
        self.save_passwd = QtWidgets.QPushButton(self.centralwidget)
        self.save_passwd.setEnabled(True)
        self.save_passwd.setGeometry(QtCore.QRect(490, 131, 91, 21))
        self.save_passwd.setAutoFillBackground(False)
        self.save_passwd.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(44, 47, 51);")
        self.save_passwd.setObjectName("save_passwd")


        self.email_label = QtWidgets.QLabel(self.centralwidget)
        self.email_label.setGeometry(QtCore.QRect(40, 101, 221, 16))
        self.email_label.setObjectName("email_label")
        self.email = QtWidgets.QLineEdit(self.centralwidget)
        self.email.setGeometry(QtCore.QRect(282, 101, 301, 20))
        self.email.setObjectName("email")
        

        self.progressbar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressbar.setGeometry(QtCore.QRect(40, 331, 541, 23))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressbar.sizePolicy().hasHeightForWidth())
        self.progressbar.setSizePolicy(sizePolicy)
        self.progressbar.setMaximum(1)
        self.progressbar.setProperty("value", 0)
        self.progressbar.setTextVisible(True)
        self.progressbar.setInvertedAppearance(False)
        self.progressbar.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.progressbar.setFormat(" %p% [%v / %m messages sent]")
        self.progressbar.setObjectName("progressbar")
        

        self.interval = QtWidgets.QSpinBox(self.centralwidget)
        self.interval.setGeometry(QtCore.QRect(400, 261, 181, 22))
        self.interval.setAccelerated(True)
        self.interval.setMinimum(1)
        self.interval.setMaximum(999999999)
        self.interval.setSingleStep(1)
        self.interval.setObjectName("interval")
        self.interval_label = QtWidgets.QLabel(self.centralwidget)
        self.interval_label.setGeometry(QtCore.QRect(40, 261, 351, 20))
        self.interval_label.setObjectName("interval_label")


        self.start = QtWidgets.QPushButton(self.centralwidget)
        self.start.setEnabled(True)
        self.start.setGeometry(QtCore.QRect(490, 301, 91, 21))
        self.start.setAutoFillBackground(False)
        self.start.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(44, 47, 51);")
        self.start.setObjectName("start")

        self.start.clicked.connect(self.startblock)


        self.result = QtWidgets.QLabel(self.centralwidget)
        self.result.setEnabled(True)
        self.result.setGeometry(QtCore.QRect(40, 360, 401, 16))
        self.result.setFocusPolicy(QtCore.Qt.NoFocus)
        self.result.setText("")
        self.result.setAlignment(QtCore.Qt.AlignCenter)
        self.result.setObjectName("result")


        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 10, 621, 81))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/image/logo.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.number.valueChanged['int'].connect(self.progressbar.setMaximum)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Discord Autosend"))
        self.link_label.setText(_translate("MainWindow", "Enter channel link :"))
        self.message_label.setText(_translate("MainWindow", "Enter message :"))
        self.number_label.setText(_translate("MainWindow", "Enter number of messages :"))
        self.save_passwd.setText(_translate("MainWindow", "Save"))
        self.passwd_label.setText(_translate("MainWindow", "Password :"))
        self.email_label.setText(_translate("MainWindow", "Discord Email :"))
        self.interval_label.setText(_translate("MainWindow", "Enter message interval (seconds)  :"))
        self.start.setText(_translate("MainWindow", "Start"))
import logo_rc






if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())